openapi: 3.0.4
info:
  title: DeepApi
  version: 0.1.0
servers:
  - url: https://api.deepinfra.com/
paths:
  /cli/version:
    get:
      summary: Cli Version
      operationId: cli_version_cli_version_get
      parameters:
        - name: version
          in: query
          required: true
          schema:
            title: Version
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/me:
    get:
      summary: Me
      operationId: me_v1_me_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    delete:
      summary: Delete Account
      operationId: delete_account_v1_me_delete
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Me'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    patch:
      summary: Account Update Details
      operationId: account_update_details_v1_me_patch
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
      security:
        - HTTPBearer: [ ]
  /v1/me/emails:
    get:
      summary: Account Email Values
      operationId: account_email_values_v1_me_emails_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/me/team_display_name:
    post:
      summary: Team Set Display Name
      operationId: team_set_display_name_v1_me_team_display_name_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisplayNameIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/me/rate_limit:
    get:
      summary: Account Rate Limit
      operationId: account_rate_limit_v1_me_rate_limit_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/me/rate_limit/request:
    post:
      summary: Request Rate Limit Increase
      operationId: request_rate_limit_increase_v1_me_rate_limit_request_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateLimitRequestIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/deploy:
    post:
      summary: Deploy Create
      operationId: deploy_create_v1_deploy_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployModelIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployResult'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '423':
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /deploy/hf/:
    post:
      summary: Deploy Create Hf
      operationId: deploy_create_hf_deploy_hf__post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HFModel'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployResult'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '423':
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /deploy/llm/gpu_availability:
    get:
      summary: Deploy Gpu Availability
      operationId: deploy_gpu_availability_deploy_llm_gpu_availability_get
      parameters:
        - name: source
          in: query
          schema:
            title: Source
            type: string
            default: ''
        - name: base_model
          in: query
          schema:
            title: Base Model
            type: string
            default: ''
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployGPUAvailability'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /deploy/llm:
    post:
      summary: Deploy Create Llm
      operationId: deploy_create_llm_deploy_llm_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployLLMIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOut'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
      security:
        - HTTPBearer: [ ]
  /deploy/list/:
    get:
      summary: Deploy List
      operationId: deploy_list_deploy_list__get
      parameters:
        - name: status
          in: query
          description: 'A list of statuses that should be returned, separated by comma. Allowed values in the list are: initializing,downloading,deploying,running,failed,deleted'
          schema:
            title: Status
            type: string
            description: 'A list of statuses that should be returned, separated by comma. Allowed values in the list are: initializing,downloading,deploying,running,failed,deleted'
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Deploy List Deploy List  Get
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      deprecated: true
      security:
        - HTTPBearer: [ ]
  /deploy/list:
    get:
      summary: Deploy List
      operationId: deploy_list_deploy_list_get
      parameters:
        - name: status
          in: query
          description: 'A list of statuses that should be returned, separated by comma. Allowed values in the list are: initializing,downloading,deploying,running,failed,deleted'
          schema:
            title: Status
            type: string
            description: 'A list of statuses that should be returned, separated by comma. Allowed values in the list are: initializing,downloading,deploying,running,failed,deleted'
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Deploy List Deploy List Get
                type: array
                items:
                  $ref: '#/components/schemas/DeploymentOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/deploy/{deploy_id}':
    get:
      summary: Deploy Status
      operationId: deploy_status_deploy__deploy_id__get
      parameters:
        - name: deploy_id
          in: path
          required: true
          schema:
            title: Deploy Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    put:
      summary: Deploy Update
      operationId: deploy_update_deploy__deploy_id__put
      parameters:
        - name: deploy_id
          in: path
          required: true
          schema:
            title: Deploy Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeployLLMUpdateIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployStatusOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    delete:
      summary: Deploy Delete
      operationId: deploy_delete_deploy__deploy_id__delete
      parameters:
        - name: deploy_id
          in: path
          required: true
          schema:
            title: Deploy Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployDelete'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/deploy/{deploy_id}/stats':
    get:
      summary: Deploy Stats
      operationId: deploy_stats_deploy__deploy_id__stats_get
      parameters:
        - name: deploy_id
          in: path
          required: true
          schema:
            title: Deploy Id
            type: string
        - name: from
          in: query
          description: 'start of period, unix ts or ''now-5h'', supported units s(ec), m(min), h(our), d(ay), w(eek), M(onth)'
          required: true
          schema:
            title: From
            type: string
            description: 'start of period, unix ts or ''now-5h'', supported units s(ec), m(min), h(our), d(ay), w(eek), M(onth)'
        - name: to
          in: query
          description: 'end of period, unix ts or now-relative, check from, defaults to now'
          schema:
            title: To
            type: string
            description: 'end of period, unix ts or now-relative, check from, defaults to now'
            default: now
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentStatsOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/deploy/{deploy_id}/stats2':
    get:
      summary: Deploy Detailed Stats
      operationId: deploy_detailed_stats_deploy__deploy_id__stats2_get
      parameters:
        - name: deploy_id
          in: path
          required: true
          schema:
            title: Deploy Id
            type: string
        - name: from
          in: query
          description: 'start of period, unix ts or ''now-5h'', supported units s, m, h, d, w'
          required: true
          schema:
            title: From
            type: string
            description: 'start of period, unix ts or ''now-5h'', supported units s, m, h, d, w'
        - name: to
          in: query
          description: 'end of period, unix ts or now-relative, check from, defaults to now'
          schema:
            title: To
            type: string
            description: 'end of period, unix ts or now-relative, check from, defaults to now'
            default: now
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedDeploymentStatsOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /models/private/list:
    get:
      summary: Private Models List
      operationId: private_models_list_models_private_list_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Private Models List Models Private List Get
                type: array
                items:
                  $ref: '#/components/schemas/ModelOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /lora-model:
    post:
      summary: Upload Lora Model
      operationId: upload_lora_model_lora_model_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoraModelUploadIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/lora-model/{lora_model_name}':
    delete:
      summary: Delete Lora Model
      operationId: delete_lora_model_lora_model__lora_model_name__delete
      parameters:
        - name: lora_model_name
          in: path
          required: true
          schema:
            title: Lora Model Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /models/list:
    get:
      summary: Models List
      operationId: models_list_models_list_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Models List Models List Get
                type: array
                items:
                  $ref: '#/components/schemas/ModelOut'
  '/models/{model_name}/versions':
    get:
      summary: Model Versions
      operationId: model_versions_models__model_name__versions_get
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Model Versions Models  Model Name  Versions Get
                type: array
                items:
                  $ref: '#/components/schemas/ModelVersionOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/models/{model_name}/publicity':
    post:
      summary: Model Publicity
      operationId: model_publicity_models__model_name__publicity_post
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelPublicityIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/models/{model_name}/meta':
    post:
      summary: Model Meta Update
      operationId: model_meta_update_models__model_name__meta_post
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelMetaIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/models/{model_name}':
    delete:
      summary: Model Delete
      operationId: model_delete_models__model_name__delete
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: version
          in: query
          description: 'delete a particular version, pass ''ALL'' to wipe everything'
          required: true
          schema:
            title: Version
            type: string
            description: 'delete a particular version, pass ''ALL'' to wipe everything'
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    get:
      summary: Models Info
      operationId: models_info_models__model_name__get
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: version
          in: query
          schema:
            title: Version
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /models/featured:
    get:
      summary: Models Featured
      operationId: models_featured_models_featured_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Models Featured Models Featured Get
                type: array
                items:
                  $ref: '#/components/schemas/ModelOut'
  '/models/{model_name}/schema/{variantKey}':
    get:
      summary: Model Schema
      operationId: model_schema_models__model_name__schema__variantKey__get
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: variantKey
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SchemaVariantKey'
        - name: version
          in: query
          schema:
            title: Version
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaOut'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '423':
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/inference/deploy/{deploy_id}':
    post:
      summary: Inference Deploy
      operationId: inference_deploy_v1_inference_deploy__deploy_id__post
      parameters:
        - name: deploy_id
          in: path
          required: true
          schema:
            title: Deploy Id
            type: string
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/inference/{model_name}':
    post:
      summary: Inference Model
      operationId: inference_model_v1_inference__model_name__post
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: version
          in: query
          description: model version to run inference against
          schema:
            title: Version
            type: string
            description: model version to run inference against
            nullable: true
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '423':
          description: Locked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/completions:
    post:
      summary: Openai Completions
      operationId: openai_completions_v1_openai_completions_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAICompletionsIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/files:
    get:
      summary: List Files
      operationId: list_files_v1_openai_files_get
      parameters:
        - name: after
          in: query
          schema:
            title: After
            type: string
            nullable: true
        - name: purpose
          in: query
          schema:
            title: Purpose
            type: string
            nullable: true
        - name: order
          in: query
          schema:
            title: Order
            type: string
            nullable: true
        - name: limit
          in: query
          schema:
            title: Limit
            type: integer
            default: 100
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    post:
      summary: Openai Files
      operationId: openai_files_v1_openai_files_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_openai_files_v1_openai_files_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/batches:
    get:
      summary: Retrieve Openai Batches
      operationId: retrieve_openai_batches_v1_openai_batches_get
      parameters:
        - name: after
          in: query
          required: true
          schema:
            title: After
            type: string
        - name: limit
          in: query
          schema:
            title: Limit
            type: integer
            default: 20
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    post:
      summary: Create Openai Batch
      operationId: create_openai_batch_v1_openai_batches_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAIBatchesIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAIBatch'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/openai/batches/{batch_id}':
    get:
      summary: Retrieve Openai Batch
      operationId: retrieve_openai_batch_v1_openai_batches__batch_id__get
      parameters:
        - name: batch_id
          in: path
          required: true
          schema:
            title: Batch Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/chat/completions:
    post:
      summary: Openai Chat Completions
      operationId: openai_chat_completions_v1_openai_chat_completions_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAIChatCompletionsIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/embeddings:
    post:
      summary: Openai Embeddings
      operationId: openai_embeddings_v1_openai_embeddings_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAIEmbeddingsIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/models:
    get:
      summary: Openai Models
      operationId: openai_models_v1_openai_models_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAIModelsOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/images/generations:
    post:
      summary: Openai Images Generations
      description: Generate image using OpenAI Images API
      operationId: openai_images_generations_v1_openai_images_generations_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAIImagesOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/images/variations:
    post:
      summary: Openai Images Variations
      description: Generate a similar image using OpenAI Images Variations API
      operationId: openai_images_variations_v1_openai_images_variations_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: user-agent
          in: header
          schema:
            title: User-Agent
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAIImagesOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/feedback:
    post:
      summary: Submit Feedback
      description: Submit feedback
      operationId: submit_feedback_v1_feedback_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/audio/speech:
    post:
      summary: Openai Audio Speech
      operationId: openai_audio_speech_v1_openai_audio_speech_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAITextToSpeechIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/audio/transcriptions:
    post:
      summary: Openai Audio Transcriptions
      operationId: openai_audio_transcriptions_v1_openai_audio_transcriptions_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_openai_audio_transcriptions_v1_openai_audio_transcriptions_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/openai/audio/translations:
    post:
      summary: Openai Audio Translations
      operationId: openai_audio_translations_v1_openai_audio_translations_post
      parameters:
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_openai_audio_translations_v1_openai_audio_translations_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/logs/query:
    get:
      summary: Logs Query
      description: "Query inference logs.\n* Without timestamps (from/to) returns last `limit` messages (in last month).\n* With `from` only, returns first `limit` messages after `from` (inclusive).\n* With `to` only, returns last `limit` messages before `to` (inclusive).\n* With both `from` and `to`, return the first `limit` messages after `from`, but not later than `to`.\n* `from` and `to` should be no more than a month apart."
      operationId: logs_query_v1_logs_query_get
      parameters:
        - name: deploy_id
          in: query
          description: the deploy id to get the logs from
          required: true
          schema:
            title: Deploy Id
            type: string
            description: the deploy id to get the logs from
        - name: from
          in: query
          description: 'start of period, in fractional seconds since unix epoch (inclusive)'
          schema:
            title: From
            type: string
            description: 'start of period, in fractional seconds since unix epoch (inclusive)'
            nullable: true
        - name: to
          in: query
          description: 'end of period, in fractional seconds since unix epoch (exclusive)'
          schema:
            title: To
            type: string
            description: 'end of period, in fractional seconds since unix epoch (exclusive)'
            nullable: true
        - name: limit
          in: query
          description: 'how many items to return at most (default 100, in [1, 1000])'
          schema:
            title: Limit
            type: integer
            description: 'how many items to return at most (default 100, in [1, 1000])'
            default: 100
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogQueryOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/deployment_logs/query:
    get:
      summary: Deployment Logs Query
      description: "Query deployment logs.\n* Without timestamps (from/to) returns last `limit` messages (in last month).\n* With `from` only, returns first `limit` messages after `from` (inclusive).\n* With `to` only, returns last `limit` messages before `to` (inclusive).\n* With both `from` and `to`, return the first `limit` messages after `from`, but not later than `to`.\n* `from` and `to` should be no more than a month apart."
      operationId: deployment_logs_query_v1_deployment_logs_query_get
      parameters:
        - name: deploy_id
          in: query
          description: the deploy id to get the logs from
          required: true
          schema:
            title: Deploy Id
            type: string
            description: the deploy id to get the logs from
        - name: pod_name
          in: query
          description: the pod name to get the logs from
          schema:
            title: Pod Name
            type: string
            description: the pod name to get the logs from
            nullable: true
        - name: from
          in: query
          description: 'start of period, in fractional seconds since unix epoch (inclusive)'
          schema:
            title: From
            type: string
            description: 'start of period, in fractional seconds since unix epoch (inclusive)'
            nullable: true
        - name: to
          in: query
          description: 'end of period, in fractional seconds since unix epoch (exclusive)'
          schema:
            title: To
            type: string
            description: 'end of period, in fractional seconds since unix epoch (exclusive)'
            nullable: true
        - name: limit
          in: query
          description: 'how many items to return at most (default 100, in [1, 1000])'
          schema:
            title: Limit
            type: integer
            description: 'how many items to return at most (default 100, in [1, 1000])'
            default: 100
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentLogQueryOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/voices:
    get:
      summary: Get Voices
      description: Get available voices for a given user
      operationId: get_voices_v1_voices_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVoicesOut'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/text-to-speech/{voice_id}/stream':
    post:
      summary: Text To Speech Stream
      operationId: text_to_speech_stream_v1_text_to_speech__voice_id__stream_post
      parameters:
        - name: voice_id
          in: path
          required: true
          schema:
            title: Voice Id
            type: string
        - name: output_format
          in: query
          schema:
            title: Output Format
            type: string
            nullable: true
          example: wav
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElevenLabsTextToSpeechIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/text-to-speech/{voice_id}':
    post:
      summary: Text To Speech
      operationId: text_to_speech_v1_text_to_speech__voice_id__post
      parameters:
        - name: voice_id
          in: path
          required: true
          schema:
            title: Voice Id
            type: string
        - name: output_format
          in: query
          schema:
            title: Output Format
            type: string
            nullable: true
          example: wav
        - name: x-deepinfra-source
          in: header
          schema:
            title: X-Deepinfra-Source
            type: string
            nullable: true
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElevenLabsTextToSpeechIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/voices/{voice_id}':
    get:
      summary: Get Voice
      description: Get a voice by its id
      operationId: get_voice_v1_voices__voice_id__get
      parameters:
        - name: voice_id
          in: path
          required: true
          schema:
            title: Voice Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    delete:
      summary: Delete Voice
      operationId: delete_voice_v1_voices__voice_id__delete
      parameters:
        - name: voice_id
          in: path
          required: true
          schema:
            title: Voice Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/voices/add:
    post:
      summary: Create Voice
      description: Create a new voice
      operationId: create_voice_v1_voices_add_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_create_voice_v1_voices_add_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/voices/{voice_id}/edit':
    post:
      summary: Update Voice
      operationId: update_voice_v1_voices__voice_id__edit_post
      parameters:
        - name: voice_id
          in: path
          required: true
          schema:
            title: Voice Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_update_voice_v1_voices__voice_id__edit_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/lora/create:
    post:
      summary: Create Lora
      operationId: create_lora_v1_lora_create_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLoraApiRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/lora/{lora_name}/status':
    get:
      summary: Get Lora Status
      operationId: get_lora_status_v1_lora__lora_name__status_get
      parameters:
        - name: lora_name
          in: path
          required: true
          schema:
            title: Lora Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/lora/{lora_name}':
    get:
      summary: Get Lora
      operationId: get_lora_v1_lora__lora_name__get
      parameters:
        - name: lora_name
          in: path
          required: true
          schema:
            title: Lora Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    patch:
      summary: Update Lora
      operationId: update_lora_v1_lora__lora_name__patch
      parameters:
        - name: lora_name
          in: path
          required: true
          schema:
            title: Lora Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLoraApiRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    delete:
      summary: Delete Lora
      operationId: delete_lora_v1_lora__lora_name__delete
      parameters:
        - name: lora_name
          in: path
          required: true
          schema:
            title: Lora Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/model/{model_name}/loras':
    get:
      summary: Get Model Loras
      operationId: get_model_loras_v1_model__model_name__loras_get
      parameters:
        - name: model_name
          in: path
          required: true
          schema:
            title: Model Name
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/user/loras:
    get:
      summary: Get User Loras
      operationId: get_user_loras_v1_user_loras_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/containers/params:
    get:
      summary: Container Rentals Get Params
      operationId: container_rentals_get_params_v1_containers_params_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/containers/gpu_availability:
    get:
      summary: Rent Gpu Availability
      operationId: rent_gpu_availability_v1_containers_gpu_availability_get
      parameters:
        - name: source
          in: query
          schema:
            title: Source
            type: string
            default: ''
        - name: base_model
          in: query
          schema:
            title: Base Model
            type: string
            default: ''
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeployGPUAvailability'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/containers:
    post:
      summary: Container Rentals Start
      operationId: container_rentals_start_v1_containers_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRentalStartIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRentalStartOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
      security:
        - HTTPBearer: [ ]
    get:
      summary: Container Rentals List
      operationId: container_rentals_list_v1_containers_get
      parameters:
        - name: state
          in: query
          description: whether to return active or inactive containers
          schema:
            title: State
            enum:
              - active
              - inactive
            type: string
            description: whether to return active or inactive containers
            default: active
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Container Rentals List V1 Containers Get
                type: array
                items:
                  $ref: '#/components/schemas/ContainerRentalOut'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
      security:
        - HTTPBearer: [ ]
  '/v1/containers/{container_id}':
    get:
      summary: Container Rentals Get
      operationId: container_rentals_get_v1_containers__container_id__get
      parameters:
        - name: container_id
          in: path
          required: true
          schema:
            title: Container Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRentalOut'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    patch:
      summary: Container Rentals Update
      operationId: container_rentals_update_v1_containers__container_id__patch
      parameters:
        - name: container_id
          in: path
          required: true
          schema:
            title: Container Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRentalUpdateIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
      security:
        - HTTPBearer: [ ]
    delete:
      summary: Container Rentals Delete
      operationId: container_rentals_delete_v1_containers__container_id__delete
      parameters:
        - name: container_id
          in: path
          required: true
          schema:
            title: Container Id
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /github/login:
    get:
      summary: Github Login
      description: Initiate github SSO login flow. Callback is /github/callback
      operationId: github_login_github_login_get
      parameters:
        - name: login_id
          in: query
          schema:
            title: Login Id
            type: string
            nullable: true
        - name: origin
          in: query
          schema:
            title: Origin
            type: string
            nullable: true
        - name: deal
          in: query
          schema:
            title: Deal
            type: string
            nullable: true
        - name: ti_token
          in: query
          schema:
            title: Ti Token
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /okta/login:
    get:
      summary: Okta Login
      operationId: okta_login_okta_login_get
      parameters:
        - name: team_id
          in: query
          required: true
          schema:
            title: Team Id
            type: string
        - name: origin
          in: query
          schema:
            title: Origin
            type: string
            nullable: true
        - name: login_id
          in: query
          schema:
            title: Login Id
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /github/cli/login:
    get:
      summary: Github Cli Login
      description: "deepctl is calling this request waiting for auth token during login.\nThe token is stored in /github/callback"
      operationId: github_cli_login_github_cli_login_get
      parameters:
        - name: login_id
          in: query
          required: true
          schema:
            title: Login Id
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/api-tokens:
    get:
      summary: Get Api Tokens
      operationId: get_api_tokens_v1_api_tokens_get
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Api Tokens V1 Api Tokens Get
                type: array
                items:
                  $ref: '#/components/schemas/ApiToken'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    post:
      summary: Create Api Token
      operationId: create_api_token_v1_api_tokens_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTokenIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/api-tokens/{api_token}':
    get:
      summary: Get Api Token
      operationId: get_api_token_v1_api_tokens__api_token__get
      parameters:
        - name: api_token
          in: path
          required: true
          schema:
            title: Api Token
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiToken'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    delete:
      summary: Delete Api Token
      operationId: delete_api_token_v1_api_tokens__api_token__delete
      parameters:
        - name: api_token
          in: path
          required: true
          schema:
            title: Api Token
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/v1/api-tokens/{api_token}/vercel_export':
    post:
      summary: Export Api Token To Vercel
      operationId: export_api_token_to_vercel_v1_api_tokens__api_token__vercel_export_post
      parameters:
        - name: api_token
          in: path
          required: true
          schema:
            title: Api Token
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTokenVercelExportIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepError'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /v1/scoped-jwt:
    post:
      summary: ' Create Scoped Jwt'
      operationId: _create_scoped_jwt_v1_scoped_jwt_post
      parameters:
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopedJWTIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopedJWTOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    get:
      summary: Inspect Scoped Jwt
      operationId: inspect_scoped_jwt_v1_scoped_jwt_get
      parameters:
        - name: jwtoken
          in: query
          required: true
          schema:
            title: Jwtoken
            type: string
        - name: xi-api-key
          in: header
          schema:
            title: Xi-Api-Key
            type: string
            nullable: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InspectScopedJWTOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/checklist:
    get:
      summary: Get Checklist
      operationId: get_checklist_payment_checklist_get
      parameters:
        - name: session
          in: cookie
          schema:
            type: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/config:
    get:
      summary: Get Config
      operationId: get_config_payment_config_get
      parameters:
        - name: session
          in: cookie
          schema:
            type: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
    post:
      summary: Set Config
      operationId: set_config_payment_config_post
      parameters:
        - name: session
          in: cookie
          schema:
            type: String
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/billing-portal:
    get:
      summary: Billing Portal
      operationId: billing_portal_payment_billing_portal_get
      parameters:
        - name: return_url
          in: query
          schema:
            title: Return Url
            type: string
            nullable: true
        - name: session
          in: cookie
          schema:
            type: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPortalOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/usage:
    get:
      summary: Usage
      operationId: usage_payment_usage_get
      parameters:
        - name: from
          in: query
          description: 'start of period, YYYY.MM or current(-N) format'
          required: true
          schema:
            title: From
            type: string
            description: 'start of period, YYYY.MM or current(-N) format'
        - name: to
          in: query
          description: 'end of period (if missing a single month marked by from is return), same format as from'
          schema:
            title: To
            type: string
            description: 'end of period (if missing a single month marked by from is return), same format as from'
            nullable: true
        - name: session
          in: cookie
          schema:
            type: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/usage/rent:
    get:
      summary: Usage Rent
      operationId: usage_rent_payment_usage_rent_get
      parameters:
        - name: from
          in: query
          description: 'start of period, in seconds since unix epoch'
          required: true
          schema:
            title: From
            type: integer
            description: 'start of period, in seconds since unix epoch'
        - name: to
          in: query
          description: 'end of period, in seconds since unix epoch'
          schema:
            title: To
            type: integer
            description: 'end of period, in seconds since unix epoch'
            nullable: true
        - name: session
          in: cookie
          schema:
            type: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageRentOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  '/payment/usage/{api_token}':
    get:
      summary: Usage Api Token
      operationId: usage_api_token_payment_usage__api_token__get
      parameters:
        - name: api_token
          in: path
          required: true
          schema:
            title: Api Token
            type: string
        - name: from
          in: query
          description: 'start of period, YYYY.MM or current(-N) format'
          required: true
          schema:
            title: From
            type: string
            description: 'start of period, YYYY.MM or current(-N) format'
        - name: to
          in: query
          description: 'end of period (if missing a single month marked by from is return), same format as from'
          schema:
            title: To
            type: string
            description: 'end of period (if missing a single month marked by from is return), same format as from'
            nullable: true
        - name: session
          in: cookie
          schema:
            type: String
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/deepstart/application:
    post:
      summary: Deepstart Apply
      operationId: deepstart_apply_payment_deepstart_application_post
      parameters:
        - name: session
          in: cookie
          schema:
            type: String
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeepStartApplicationIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepStartApplicationOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/funds:
    post:
      summary: Add Funds
      operationId: add_funds_payment_funds_post
      parameters:
        - name: session
          in: cookie
          schema:
            type: String
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFundsIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
  /payment/topup:
    post:
      summary: Setup Topup
      operationId: setup_topup_payment_topup_post
      parameters:
        - name: session
          in: cookie
          schema:
            type: String
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: { }
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: [ ]
components:
  schemas:
    AddFundsIn:
      title: AddFundsIn
      required:
        - amount
      type: object
      properties:
        amount:
          title: Amount
          type: integer
          description: Amount to add in cents
    BillingPortalOut:
      title: BillingPortalOut
      required:
        - url
      type: object
      properties:
        url:
          title: Url
          type: string
    Checklist:
      title: Checklist
      required:
        - stripe_balance
        - limit
        - suspend_reason
      type: object
      properties:
        email:
          title: Email
          type: boolean
          default: false
        billing_address:
          title: Billing Address
          type: boolean
          default: false
        payment_method:
          title: Payment Method
          type: boolean
          default: false
        suspended:
          title: Suspended
          type: boolean
          default: false
        overdue_invoices:
          title: Overdue Invoices
          type: number
          default: 0
        last_checked:
          title: Last Checked
          type: integer
          default: 0
        stripe_balance:
          title: Stripe Balance
          type: number
          description: Negative value indicates funds ready-to-spend. Positive value indicates money owed
        limit:
          title: Limit
          type: number
          nullable: true
        suspend_reason:
          $ref: '#/components/schemas/SuspendReason'
        topup:
          title: Topup
          type: boolean
          default: false
        topup_amount:
          title: Topup Amount
          type: integer
          default: 0
        topup_threshold:
          title: Topup Threshold
          type: integer
          default: 0
        topup_failed:
          title: Topup Failed
          type: boolean
          default: false
    ConfigIn:
      title: ConfigIn
      type: object
      properties:
        limit:
          title: Limit
          type: number
          description: Set usage limit (in USD). Negative means no limit.null/not-set means don't change it
          nullable: true
    ConfigOut:
      title: ConfigOut
      required:
        - limit
      type: object
      properties:
        limit:
          title: Limit
          type: number
          description: Spending limit (in USD). Negative means no limit
    DeepStartApplicationIn:
      title: DeepStartApplicationIn
      required:
        - company
        - ceo
        - funding
        - founded_on
        - website
      type: object
      properties:
        id:
          title: Id
          type: string
        uid:
          title: Uid
          type: string
          nullable: true
        company:
          title: Company
          type: string
        ceo:
          title: Ceo
          type: string
        funding:
          title: Funding
          type: string
        founded_on:
          title: Founded On
          type: string
        website:
          title: Website
          type: string
        created_at:
          title: Created At
          type: integer
        status:
          title: Status
          type: string
          default: pending
        deal:
          title: Deal
          type: string
          nullable: true
    DeepStartApplicationOut:
      title: DeepStartApplicationOut
      required:
        - company
        - ceo
        - funding
        - founded_on
        - website
      type: object
      properties:
        id:
          title: Id
          type: string
        uid:
          title: Uid
          type: string
          nullable: true
        company:
          title: Company
          type: string
        ceo:
          title: Ceo
          type: string
        funding:
          title: Funding
          type: string
        founded_on:
          title: Founded On
          type: string
        website:
          title: Website
          type: string
        created_at:
          title: Created At
          type: integer
        status:
          title: Status
          type: string
          default: pending
        deal:
          title: Deal
          type: string
          nullable: true
        email:
          title: Email
          type: string
          nullable: true
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ModelMeta:
      title: ModelMeta
      required:
        - provider
        - model_name
        - task
      type: object
      properties:
        provider:
          title: Provider
          type: string
        model_name:
          title: Model Name
          type: string
        task:
          title: Task
          type: string
        plan_id:
          title: Plan Id
          type: string
          nullable: true
    SuspendReason:
      title: SuspendReason
      enum:
        - payment-method
        - overdue-invoices
        - limit-reached
        - admin
        - bad-cc
      type: string
    TimeInterval:
      title: TimeInterval
      type: object
      properties:
        fr:
          title: Fr
          type: integer
          default: 0
        to:
          title: To
          type: integer
          format: int64
          default: 4000000000000
      description: 'Inclusive, in ms'
    TopUpIn:
      title: TopUpIn
      type: object
      properties:
        amount:
          title: Amount
          type: integer
          description: Amount to top up in cents
          default: 0
        threshold:
          title: Threshold
          type: integer
          description: 'Top up threshold in cents, if balance goes below this value, top up will be triggered'
          default: 0
        enabled:
          title: Enabled
          type: boolean
          description: 'If true, top up will be triggered when balance goes below threshold'
          default: true
    UsageItem:
      title: UsageItem
      required:
        - model
        - units
        - rate
        - cost
        - pricing_type
        - interval
      type: object
      properties:
        model:
          $ref: '#/components/schemas/ModelMeta'
        units:
          title: Units
          type: integer
          description: billed seconds or tokens
        rate:
          title: Rate
          type: number
          description: rate in cents/sec or cents per token
        cost:
          title: Cost
          type: integer
          description: model cost in cents
        pricing_type:
          title: Pricing Type
          type: string
          description: pricing type
        interval:
          $ref: '#/components/schemas/TimeInterval'
    UsageMonth:
      title: UsageMonth
      required:
        - period
        - interval
        - items
        - total_cost
      type: object
      properties:
        period:
          title: Period
          type: string
          description: YYYY.MM formatted period
        interval:
          $ref: '#/components/schemas/TimeInterval'
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/UsageItem'
        total_cost:
          title: Total Cost
          type: integer
          description: total cost for all items in cents
        invoice_id:
          title: Invoice Id
          type: string
          description: 'Stripe Invoice ID, or EMPTY|NOT_FINAL'
          default: NOT_FINAL
    UsageOut:
      title: UsageOut
      required:
        - months
        - initial_month
      type: object
      properties:
        months:
          title: Months
          type: array
          items:
            $ref: '#/components/schemas/UsageMonth'
        initial_month:
          title: Initial Month
          type: string
          description: The first month for this account
    UsageRentOut:
      title: UsageRentOut
      required:
        - id_to_duration
      type: object
      properties:
        id_to_duration:
          title: Id To Duration
          type: object
          additionalProperties:
            type: integer
          description: container id to duration in seconds
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    ApiToken:
      title: ApiToken
      required:
        - token
        - created_at
        - name
      type: object
      properties:
        token:
          title: Token
          type: string
        created_at:
          title: Created At
          type: integer
          description: creation unix timestamp
        name:
          title: Name
          type: string
        token_id:
          title: Token Id
          type: string
          nullable: true
    ApiTokenIn:
      title: ApiTokenIn
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
    ApiTokenVercelExportIn:
      title: ApiTokenVercelExportIn
      required:
        - project_id_or_name
        - is_sensitive
        - env_development
        - env_preview
        - env_production
      type: object
      properties:
        project_id_or_name:
          title: Project Id Or Name
          type: string
        is_sensitive:
          title: Is Sensitive
          type: boolean
        env_development:
          title: Env Development
          type: boolean
        env_preview:
          title: Env Preview
          type: boolean
        env_production:
          title: Env Production
          type: boolean
    Body_create_voice_v1_voices_add_post:
      title: Body_create_voice_v1_voices_add_post
      required:
        - name
        - description
        - files
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        files:
          title: Files
          type: array
          items:
            type: string
            format: binary
    Body_openai_audio_transcriptions_v1_openai_audio_transcriptions_post:
      title: Body_openai_audio_transcriptions_v1_openai_audio_transcriptions_post
      required:
        - file
        - model
      type: object
      properties:
        file:
          title: File
          type: string
          format: binary
        model:
          title: Model
          type: string
        language:
          title: Language
          type: string
          nullable: true
        prompt:
          title: Prompt
          type: string
          nullable: true
        response_format:
          title: Response Format
          enum:
            - json
            - verbose_json
            - text
            - srt
            - vtt
          type: string
          default: json
          nullable: true
        temperature:
          title: Temperature
          type: number
          default: 0
          nullable: true
        timestamp_granularities:
          title: Timestamp Granularities
          type: array
          items:
            enum:
              - segment
              - word
            type: string
          nullable: true
    Body_openai_audio_translations_v1_openai_audio_translations_post:
      title: Body_openai_audio_translations_v1_openai_audio_translations_post
      required:
        - file
        - model
      type: object
      properties:
        file:
          title: File
          type: string
          format: binary
        model:
          title: Model
          type: string
        prompt:
          title: Prompt
          type: string
          nullable: true
        response_format:
          title: Response Format
          enum:
            - json
            - verbose_json
            - text
            - srt
            - vtt
          type: string
          default: json
          nullable: true
        temperature:
          title: Temperature
          type: number
          default: 0
          nullable: true
    Body_openai_files_v1_openai_files_post:
      title: Body_openai_files_v1_openai_files_post
      required:
        - purpose
        - file
      type: object
      properties:
        purpose:
          title: Purpose
          type: string
        file:
          title: File
          type: array
          items:
            type: string
            format: binary
    Body_update_voice_v1_voices__voice_id__edit_post:
      title: Body_update_voice_v1_voices__voice_id__edit_post
      required:
        - name
        - description
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
    ChatCompletionAssistantMessage:
      title: ChatCompletionAssistantMessage
      type: object
      properties:
        role:
          title: Role
          enum:
            - assistant
          type: string
          description: the role of the author of this message
          default: assistant
        content:
          title: Content
          type: string
          description: the message content
          nullable: true
        name:
          title: Name
          type: string
          nullable: true
        tool_calls:
          title: Tool Calls
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionMessageToolCall'
          description: the tool calls generated by the mode
          nullable: true
    ChatCompletionContentPartAudio:
      title: ChatCompletionContentPartAudio
      required:
        - type
        - input_audio
      type: object
      properties:
        type:
          title: Type
          enum:
            - input_audio
          type: string
        input_audio:
          $ref: '#/components/schemas/InputAudio'
    ChatCompletionContentPartImage:
      title: ChatCompletionContentPartImage
      required:
        - type
        - image_url
      type: object
      properties:
        type:
          title: Type
          enum:
            - image_url
          type: string
        image_url:
          $ref: '#/components/schemas/ImageURL'
    ChatCompletionContentPartText:
      title: ChatCompletionContentPartText
      required:
        - type
        - text
      type: object
      properties:
        type:
          title: Type
          enum:
            - text
          type: string
        text:
          title: Text
          type: string
    ChatCompletionMessageToolCall:
      title: ChatCompletionMessageToolCall
      required:
        - id
        - type
        - function
      type: object
      properties:
        id:
          title: Id
          type: string
          description: the id of the tool call
        type:
          title: Type
          type: string
          description: the type of the tool call. only function is supported currently
        function:
          $ref: '#/components/schemas/Function'
    ChatCompletionSystemMessage:
      title: ChatCompletionSystemMessage
      required:
        - content
      type: object
      properties:
        role:
          title: Role
          enum:
            - system
          type: string
          description: the role of the author of this message
          default: system
        content:
          title: Content
          anyOf:
            - type: string
            - type: array
              items:
                $ref: '#/components/schemas/ChatCompletionContentPartText'
          description: the message content
        name:
          title: Name
          type: string
          nullable: true
    ChatCompletionToolMessage:
      title: ChatCompletionToolMessage
      required:
        - content
        - tool_call_id
      type: object
      properties:
        role:
          title: Role
          enum:
            - tool
          type: string
          description: the role of the author of this message
          default: tool
        content:
          title: Content
          type: string
          description: the message content
        tool_call_id:
          title: Tool Call Id
          type: string
    ChatCompletionUserMessage:
      title: ChatCompletionUserMessage
      required:
        - content
      type: object
      properties:
        role:
          title: Role
          enum:
            - user
          type: string
          description: the role of the author of this message
          default: user
        content:
          title: Content
          anyOf:
            - type: string
            - type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/ChatCompletionContentPartText'
                  - $ref: '#/components/schemas/ChatCompletionContentPartImage'
                  - $ref: '#/components/schemas/ChatCompletionContentPartAudio'
          description: the message content
        name:
          title: Name
          type: string
          nullable: true
    ChatTools:
      title: ChatTools
      required:
        - function
      type: object
      properties:
        type:
          title: Type
          type: string
          default: function
        function:
          $ref: '#/components/schemas/FunctionDefinition'
    ContainerRentalOut:
      title: ContainerRentalOut
      required:
        - id
        - name
        - state
        - start_ts
        - state_ts
        - stop_ts
        - ip
        - gpu_config
        - price_per_hour
        - container_image
        - fail_reason
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        state:
          $ref: '#/components/schemas/ContainerRentalStateOut'
        start_ts:
          title: Start Ts
          type: integer
        state_ts:
          title: State Ts
          type: integer
        stop_ts:
          title: Stop Ts
          type: integer
          nullable: true
        ip:
          title: Ip
          type: string
          nullable: true
        gpu_config:
          title: Gpu Config
          type: string
        price_per_hour:
          title: Price Per Hour
          type: number
        container_image:
          title: Container Image
          type: string
        fail_reason:
          title: Fail Reason
          type: string
          nullable: true
    ContainerRentalStartIn:
      title: ContainerRentalStartIn
      required:
        - name
        - gpu_config
        - container_image
        - cloud_init_user_data
      type: object
      properties:
        name:
          title: Name
          maxLength: 64
          minLength: 1
          type: string
          description: Container Name
        gpu_config:
          title: Gpu Config
          minLength: 1
          type: string
          description: GPU config
        container_image:
          title: Container Image
          minLength: 1
          type: string
          description: Container Image
        cloud_init_user_data:
          title: Cloud Init User Data
          maxLength: 32000
          minLength: 1
          type: string
          description: Cloud Init User Data
    ContainerRentalStartOut:
      title: ContainerRentalStartOut
      required:
        - container_id
      type: object
      properties:
        container_id:
          title: Container Id
          type: string
          description: Container Id
    ContainerRentalStateOut:
      title: ContainerRentalStateOut
      enum:
        - creating
        - starting
        - running
        - shutting_down
        - failed
        - deleted
      type: string
    ContainerRentalUpdateIn:
      title: ContainerRentalUpdateIn
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 64
          minLength: 1
          type: string
          description: Container Name
      additionalProperties: false
    CreateLoraApiRequest:
      title: CreateLoraApiRequest
      required:
        - base_model
        - lora_name
        - source
        - private
      type: object
      properties:
        base_model:
          title: Base Model
          type: string
        lora_name:
          title: Lora Name
          type: string
        source:
          $ref: '#/components/schemas/SourceModel'
        private:
          title: Private
          type: boolean
        description:
          title: Description
          type: string
          default: ''
          nullable: true
    DeepError:
      title: DeepError
      required:
        - error
      type: object
      properties:
        error:
          title: Error
          type: string
          description: Error
          example: Model not found
    DeployDelete:
      title: DeployDelete
      required:
        - deploy_id
      type: object
      properties:
        deploy_id:
          title: Deploy Id
          type: string
          description: Deploy Id
          example: fkj843kjh8
    DeployGPUAvailability:
      title: DeployGPUAvailability
      required:
        - gpus
      type: object
      properties:
        gpus:
          title: Gpus
          type: array
          items:
            $ref: '#/components/schemas/GPUAvailabilityInfo'
          description: 'A list of all provided GPUs configurations, including their price and wether they are available'
    DeployGPUs:
      title: DeployGPUs
      enum:
        - A100-80GB
        - H100-80GB
        - H200-141GB
        - B200-180GB
        - other
      type: string
    DeployInstances:
      title: DeployInstances
      required:
        - running
        - pending
      type: object
      properties:
        running:
          title: Running
          type: integer
        pending:
          title: Pending
          type: integer
    DeployLLMConfig:
      title: DeployLLMConfig
      required:
        - gpu
        - num_gpus
        - max_batch_size
      type: object
      properties:
        gpu:
          $ref: '#/components/schemas/DeployGPUs'
        num_gpus:
          title: Num Gpus
          type: integer
          description: Number of GPUs used by one instance
        max_batch_size:
          title: Max Batch Size
          type: integer
          description: Maximum number of concurrent requests
        weights:
          $ref: '#/components/schemas/HFWeights'
    DeployLLMIn:
      title: DeployLLMIn
      required:
        - model_name
        - gpu
      type: object
      properties:
        model_name:
          title: Model Name
          type: string
          description: model name for deepinfra (username/mode-name format)
        gpu:
          $ref: '#/components/schemas/DeployGPUs'
        num_gpus:
          title: Num Gpus
          maximum: 8.0
          minimum: 1.0
          type: integer
          description: Number of GPUs you want for this model
          default: 1
        max_batch_size:
          title: Max Batch Size
          maximum: 256.0
          minimum: 1.0
          type: integer
          description: Maximum number of concurrent requests
          default: 96
        hf:
          $ref: '#/components/schemas/HFWeights'
        settings:
          $ref: '#/components/schemas/ScaleSettings'
    DeployLLMUpdateIn:
      title: DeployLLMUpdateIn
      required:
        - settings
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/ScaleSettings'
    DeployModelIn:
      title: DeployModelIn
      required:
        - model_name
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ModelProvider'
        model_name:
          title: Model Name
          type: string
          description: model name in specified provider
        version:
          title: Version
          type: string
          description: 'A specific revision, if left empty uses the last one'
          nullable: true
    DeployResult:
      title: DeployResult
      required:
        - deploy_id
      type: object
      properties:
        deploy_id:
          title: Deploy Id
          type: string
          description: Deploy Id
          example: fkj843kjh8
    DeployStatusOut:
      title: DeployStatusOut
      required:
        - deploy_id
      type: object
      properties:
        deploy_id:
          title: Deploy Id
          type: string
          description: Deploy Id
          example: fkj843kjh8
    DeployType:
      title: DeployType
      enum:
        - legacy
        - llm
        - lora
      type: string
    DeploymentLogEntry:
      maxItems: 2
      minItems: 2
      type: array
      items:
        title: Ts
        type: string
        description: timestamp in fractional seconds since unix epoch (ns precision)
    DeploymentLogQueryOut:
      title: DeploymentLogQueryOut
      type: object
      properties:
        entries:
          title: Entries
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/DeploymentLogEntry'
          description: mapping of pod names to log lines ordered by increasing timestamp
    DeploymentOut:
      title: DeploymentOut
      required:
        - deploy_id
        - model_name
        - version
        - task
        - status
        - fail_reason
        - created_at
        - updated_at
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DeployType'
        deploy_id:
          title: Deploy Id
          type: string
          description: Deploy Id
          example: fkj843kjh8
        model_name:
          title: Model Name
          type: string
          description: Model Id from huggingface
          example: google/vit-base-patch16-224
        version:
          title: Version
          type: string
          description: Model version
          example: d8b79b422843bd59d628bf25b01aded94a9ec1a9b917e69fe460df9ff39ec42b
        task:
          title: Task
          type: string
          description: Task
          example: image-classification
        status:
          title: Status
          type: string
          description: Status
          example: deployed
        fail_reason:
          title: Fail Reason
          type: string
          description: Failure reason
          example: Initialization failed
        created_at:
          title: Created At
          type: string
          description: Created at
          example: '2021-08-27T17:19:21+00:00'
        updated_at:
          title: Updated At
          type: string
          description: Updated at
          example: '2021-08-27T17:19:21+00:00'
        instances:
          $ref: '#/components/schemas/DeployInstances'
        config:
          $ref: '#/components/schemas/DeployLLMConfig'
        settings:
          $ref: '#/components/schemas/ScaleSettings'
    DeploymentStatsOut:
      title: DeploymentStatsOut
      required:
        - requests
        - total_time
        - total_tokens
        - input_tokens
        - output_tokens
        - total_amount
        - avg_time
        - avg95_time
        - errors
      type: object
      properties:
        requests:
          title: Requests
          type: integer
          description: number of inference requests in the provided interval
        total_time:
          title: Total Time
          type: integer
          description: total number of seconds spend in inference
        total_tokens:
          title: Total Tokens
          type: integer
          description: total number of tokens generated
        input_tokens:
          title: Input Tokens
          type: integer
          description: number of input tokens generated
        output_tokens:
          title: Output Tokens
          type: integer
          description: number of output tokens generated
        total_amount:
          title: Total Amount
          type: integer
          description: total number of cents spent
        avg_time:
          title: Avg Time
          type: number
          description: average millisecond inference time
        avg95_time:
          title: Avg95 Time
          type: number
          description: 95th percentile inference time (estimated)
        errors:
          title: Errors
          type: integer
          description: number of errors
    DetailedDeploymentStatsOut:
      title: DetailedDeploymentStatsOut
      type: object
      properties:
        llm:
          $ref: '#/components/schemas/LLMDeploymentStatsOut'
        embeddings:
          $ref: '#/components/schemas/EmbeddingsDeploymentStatsOut'
        time:
          $ref: '#/components/schemas/TimeDeploymentStatsOut'
    DisplayNameIn:
      title: DisplayNameIn
      required:
        - display_name
      type: object
      properties:
        display_name:
          title: Display Name
          maxLength: 39
          minLength: 1
          pattern: '^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$'
          type: string
          description: 'String with length between 1 and 39 characters. Only alphanumeric characters and dashes allowed. Must contain no leading, trailing or consecutive dashes.'
    ElevenLabsTextToSpeechIn:
      title: ElevenLabsTextToSpeechIn
      required:
        - text
      type: object
      properties:
        text:
          title: Text
          type: string
          description: Text to convert to speech
          example: "I'm beginnin' to feel like a Rap God, Rap God\nAll my people from the front to the back nod, back nod\nNow, who thinks their arms are long enough to slap box, slap box?\nThey said I rap like a robot, so call me Rap-bot"
        model_id:
          title: Model Id
          type: string
          description: Model ID to use for the conversion
          default: hexgrad/Kokoro-82M
        output_format:
          $ref: '#/components/schemas/TtsResponseFormat'
        language_code:
          title: Language Code
          type: string
          description: 'ISO 639-1, 2 letter language code'
          nullable: true
    EmailsOut:
      title: EmailsOut
      required:
        - emails
      type: object
      properties:
        emails:
          title: Emails
          type: array
          items:
            type: string
          description: List of emails verified by theauthenticaiton provider
    EmbeddingsDeploymentStatsOut:
      title: EmbeddingsDeploymentStatsOut
      required:
        - requests
        - input_tokens
        - avg_tpt_ms
        - avg95_tpt_ms
        - total_amount_cents
        - errors
      type: object
      properties:
        requests:
          title: Requests
          type: integer
          description: number of inference requests in the provided interval
        input_tokens:
          title: Input Tokens
          type: integer
          description: number of input tokens generated
        avg_tpt_ms:
          title: Avg Tpt Ms
          type: number
          description: average millisecond time per token
        avg95_tpt_ms:
          title: Avg95 Tpt Ms
          type: number
          description: 95th percentile time per token (estimated)
        total_amount_cents:
          title: Total Amount Cents
          type: integer
          description: total number of cents spent
        errors:
          title: Errors
          type: integer
          description: number of errors
    FeedbackIn:
      title: FeedbackIn
      required:
        - message
      type: object
      properties:
        message:
          title: Message
          type: string
          description: The message you'd like to send to deepinfra team
        contact_email:
          title: Contact Email
          type: string
          description: Optional contact email to reach you back
          format: email
          nullable: true
    Function:
      title: Function
      required:
        - name
        - arguments
      type: object
      properties:
        name:
          title: Name
          type: string
          description: the name of the function to call
        arguments:
          title: Arguments
          type: string
          description: 'the function arguments, generated by the model in JSON format. the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema'
    FunctionDefinition:
      title: FunctionDefinition
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
          nullable: true
        parameters:
          title: Parameters
          type: object
          nullable: true
    GPUAvailabilityInfo:
      title: GPUAvailabilityInfo
      required:
        - gpu_config
        - usd_per_hour
        - available
      type: object
      properties:
        gpu_config:
          title: Gpu Config
          type: string
        usd_per_hour:
          title: Usd Per Hour
          type: number
        available:
          title: Available
          type: boolean
        recommended:
          title: Recommended
          type: boolean
          default: false
    GetVoicesOut:
      title: GetVoicesOut
      type: object
      properties:
        voices:
          title: Voices
          type: array
          items:
            $ref: '#/components/schemas/Voice'
    HFModel:
      title: HFModel
      required:
        - model_name
      type: object
      properties:
        model_name:
          title: Model Name
          type: string
          description: Model Id from huggingface
          example: google/vit-base-patch16-224
        task:
          title: Task
          type: string
          description: Task
          nullable: true
          example: image-classification
    HFTasksE:
      title: HFTasksE
      enum:
        - automatic-speech-recognition
        - image-classification
        - question-answering
        - token-classification
        - text-to-image
        - fill-mask
        - zero-shot-image-classification
        - text2text-generation
        - text-generation
        - text-classification
        - object-detection
        - embeddings
        - dreambooth
        - custom
        - text-to-speech
        - text-to-video
        - rent-container
      type: string
    HFWeights:
      title: HFWeights
      required:
        - repo
      type: object
      properties:
        repo:
          title: Repo
          type: string
          description: huggingface repository i.e username/reponame
        revision:
          title: Revision
          type: string
          description: commit sha or branch name
          nullable: true
        token:
          title: Token
          type: string
          description: huggingface access token with read access to the repo
          nullable: true
    ImageURL:
      title: ImageURL
      required:
        - url
      type: object
      properties:
        url:
          title: Url
          type: string
        detail:
          title: Detail
          enum:
            - auto
            - low
            - high
          type: string
          default: auto
    InputAudio:
      title: InputAudio
      required:
        - data
      type: object
      properties:
        data:
          title: Data
          type: string
        format:
          title: Format
          enum:
            - wav
            - mp3
          type: string
          default: wav
    InspectScopedJWTOut:
      title: InspectScopedJWTOut
      required:
        - expires_at
      type: object
      properties:
        expires_at:
          title: Expires At
          type: integer
          description: unix timestamp of when the token expires
        models:
          title: Models
          type: array
          items:
            type: string
          description: which models is the token limited to
          nullable: true
        spending_limit:
          title: Spending Limit
          type: number
          description: how much is the total spending limit set at creation
          nullable: true
    LLMDeploymentStatsOut:
      title: LLMDeploymentStatsOut
      required:
        - requests
        - input_tokens
        - output_tokens
        - avg_ttft_ms
        - avg95_ttft_ms
        - avg_tpt_ms
        - avg95_tpt_ms
        - total_amount_cents
        - errors
      type: object
      properties:
        requests:
          title: Requests
          type: integer
          description: number of inference requests in the provided interval
        input_tokens:
          title: Input Tokens
          type: integer
          description: number of input tokens generated
        output_tokens:
          title: Output Tokens
          type: integer
          description: number of output tokens generated
        avg_ttft_ms:
          title: Avg Ttft Ms
          type: number
          description: average millisecond time to first token
        avg95_ttft_ms:
          title: Avg95 Ttft Ms
          type: number
          description: 95th percentile time to first token (estimated)
        avg_tpt_ms:
          title: Avg Tpt Ms
          type: number
          description: average millisecond time per token
        avg95_tpt_ms:
          title: Avg95 Tpt Ms
          type: number
          description: 95th percentile time per token (estimated)
        total_amount_cents:
          title: Total Amount Cents
          type: integer
          description: total number of cents spent
        errors:
          title: Errors
          type: integer
          description: number of errors
    LogEntry:
      maxItems: 2
      minItems: 2
      type: array
      items:
        title: Ts
        type: string
        description: timestamp in fractional seconds since unix epoch (ns precision)
    LogQueryOut:
      title: LogQueryOut
      type: object
      properties:
        entries:
          title: Entries
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
          description: list of log lines ordered by increasing timestamp
    LoraModelUploadIn:
      title: LoraModelUploadIn
      required:
        - hf_model_name
        - lora_model_name
      type: object
      properties:
        hf_model_name:
          title: Hf Model Name
          type: string
        hf_token:
          title: Hf Token
          type: string
          nullable: true
        lora_model_name:
          title: Lora Model Name
          type: string
        base_model_name:
          title: Base Model Name
          type: string
          nullable: true
    Me:
      title: Me
      required:
        - uid
        - email
        - email_verified
        - display_name
        - provider
        - picture
        - is_admin
        - name
        - is_business_account
        - company
        - website
      type: object
      properties:
        uid:
          title: Uid
          type: string
        email:
          title: Email
          type: string
          nullable: true
        email_verified:
          title: Email Verified
          type: boolean
        require_email_verified:
          title: Require Email Verified
          type: boolean
          default: false
        display_name:
          title: Display Name
          type: string
          description: Name that is used to identifythe account on the website
        provider:
          title: Provider
          type: string
          description: 'Authentication provider, e.g. ''github'''
        picture:
          title: Picture
          type: string
          nullable: true
        is_admin:
          title: Is Admin
          type: boolean
        name:
          title: Name
          type: string
          description: Personal name
        is_business_account:
          title: Is Business Account
          type: boolean
        company:
          title: Company
          type: string
          description: Company name
        website:
          title: Website
          type: string
          description: Company website address
        is_team_account:
          title: Is Team Account
          type: boolean
          default: false
        is_team_owner:
          title: Is Team Owner
          type: boolean
          default: false
        team_role:
          title: Team Role
          type: string
          nullable: true
        team_display_name:
          title: Team Display Name
          type: string
          nullable: true
        is_team_upgrade_enabled:
          title: Is Team Upgrade Enabled
          type: boolean
          default: true
        vercel_connection:
          $ref: '#/components/schemas/MeVercelConnection'
    MeIn:
      title: MeIn
      type: object
      properties:
        name:
          title: Name
          minLength: 1
          type: string
          description: Personal name
          nullable: true
        email:
          title: Email
          minLength: 1
          type: string
          nullable: true
        is_business_account:
          title: Is Business Account
          type: boolean
          nullable: true
        company:
          title: Company
          minLength: 1
          type: string
          description: Company name
          nullable: true
        website:
          title: Website
          minLength: 1
          type: string
          description: Company website address
          nullable: true
        display_name:
          title: Display Name
          maxLength: 39
          minLength: 1
          pattern: '^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$'
          type: string
          description: 'String with length between 1 and 39 characters. Only alphanumeric characters and dashes allowed. Must contain no leading, trailing or consecutive dashes.'
          nullable: true
    MeVercelConnection:
      title: MeVercelConnection
      required:
        - user_id
        - installation_id
      type: object
      properties:
        user_id:
          title: User Id
          type: string
        team_id:
          title: Team Id
          type: string
          nullable: true
        installation_id:
          title: Installation Id
          type: string
    ModelDocBlock:
      title: ModelDocBlock
      required:
        - key
        - url
      type: object
      properties:
        key:
          $ref: '#/components/schemas/ModelDocBlockKey'
        url:
          title: Url
          type: string
    ModelDocBlockKey:
      title: ModelDocBlockKey
      enum:
        - http
        - http-bge-m3-multimodal
        - http-bagel-multimodal
        - deepctl
        - js-text-gen
        - js-emb
        - js-text-to-img
        - js-speech-to-text
        - openai-python
        - openai-http
        - openai-js
        - openai-speech-http
        - openai-speech-python
        - openai-speech-js
        - openai-images-http
        - openai-images-python
        - openai-images-js
        - openai-images-variations-http
        - openai-images-variations-python
        - openai-images-variations-js
        - openai-comp-python
        - openai-comp-http
        - openai-comp-js
        - openai-emb-py
        - openai-emb-http
        - openai-emb-js
        - openai-tts-http
        - openai-tts-python
        - openai-tts-js
        - elevenlabs-tts-http
        - elevenlabs-tts-python
        - elevenlabs-tts-js
        - create-voice-http
        - create-voice-python
        - create-voice-js
        - read-voice-http
        - read-voice-python
        - read-voice-js
        - update-voice-http
        - update-voice-python
        - update-voice-js
        - delete-voice-http
        - delete-voice-python
        - delete-voice-js
        - list-voices-http
        - list-voices-python
        - list-voices-js
        - ai-sdk-js
      type: string
    ModelFieldInfo:
      title: ModelFieldInfo
      required:
        - name
        - ftype
      type: object
      properties:
        name:
          title: Name
          type: string
        parent:
          title: Parent
          type: string
          nullable: true
        ftype:
          title: Ftype
          type: string
        description:
          title: Description
          type: string
          nullable: true
        allowed:
          title: Allowed
          type: array
          items: { }
          nullable: true
        default:
          title: Default
        examples:
          title: Examples
          type: array
          items: { }
        minimum:
          title: Exclusiveminimum
          type: number
          nullable: true
        exclusiveMinimum: 
        maximum:
          title: Exclusivemaximum
          type: number
          nullable: true
        exclusiveMaximum: 
    ModelInfoOut:
      title: ModelInfoOut
      required:
        - model_name
        - type
        - tags
        - reported_type
        - version
        - featured
        - public
        - curl_inv
        - cmdline_inv
        - txt_docs
        - out_example
        - out_docs
        - pricing
        - schemas
      type: object
      properties:
        model_name:
          title: Model Name
          type: string
        type:
          title: Type
          type: string
        tags:
          title: Tags
          type: array
          items:
            type: string
        reported_type:
          title: Reported Type
          type: string
        version:
          title: Version
          type: string
        description:
          title: Description
          type: string
          nullable: true
        featured:
          title: Featured
          type: boolean
        owner:
          title: Owner
          type: boolean
          default: false
        public:
          title: Public
          type: boolean
        curl_inv:
          title: Curl Inv
          type: string
        cmdline_inv:
          title: Cmdline Inv
          type: string
        txt_docs:
          title: Txt Docs
          type: string
        out_example:
          title: Out Example
          type: string
        out_docs:
          title: Out Docs
          type: string
        mask_token:
          title: Mask Token
          type: string
          nullable: true
        in_schema:
          title: In Schema
        out_schema:
          title: Out Schema
        in_fields:
          title: In Fields
          type: array
          items:
            $ref: '#/components/schemas/ModelFieldInfo'
          nullable: true
        pricing:
          title: Pricing
          anyOf:
            - $ref: '#/components/schemas/ModelPricingTime'
            - $ref: '#/components/schemas/ModelPricingUptime'
            - $ref: '#/components/schemas/ModelPricingTokens'
            - $ref: '#/components/schemas/ModelPricingInputLength'
            - $ref: '#/components/schemas/ModelPricingInputTokens'
            - $ref: '#/components/schemas/ModelPricingInputCharacterLength'
            - $ref: '#/components/schemas/ModelPricingImageUnits'
        doc_blocks:
          title: Doc Blocks
          type: array
          items:
            $ref: '#/components/schemas/ModelDocBlock'
          nullable: true
        schemas:
          title: Schemas
          type: array
          items:
            $ref: '#/components/schemas/SchemaVariant'
        meta:
          title: Meta
          type: object
        max_tokens:
          title: Max Tokens
          type: integer
          nullable: true
        replaced_by:
          title: Replaced By
          type: string
          nullable: true
        deprecated:
          title: Deprecated
          type: integer
          nullable: true
        quantization:
          title: Quantization
          type: string
          nullable: true
        mmlu:
          title: Mmlu
          type: number
          nullable: true
        expected:
          title: Expected
          type: string
          nullable: true
    ModelMetaIn:
      title: ModelMetaIn
      type: object
      properties:
        description:
          title: Description
          type: string
          description: short model description in plain text
          nullable: true
        github_url:
          title: Github Url
          type: string
          description: source code project link (empty to delete)
          nullable: true
        paper_url:
          title: Paper Url
          type: string
          description: paper/research link (empty to delete)
          nullable: true
        license_url:
          title: License Url
          type: string
          description: usage license link (empty to delete)
          nullable: true
        readme:
          title: Readme
          type: string
          description: markdown flavored model readme
          nullable: true
        cover_img_url:
          title: Cover Img Url
          type: string
          description: dataurl or regular url to cover image (empty to delete)
          nullable: true
        reported_type:
          $ref: '#/components/schemas/HFTasksE'
      additionalProperties: false
    ModelOut:
      title: ModelOut
      required:
        - model_name
        - type
        - reported_type
        - pricing
      type: object
      properties:
        model_name:
          title: Model Name
          type: string
          description: Model Name
          example: microsoft/resnet-50
        type:
          title: Type
          type: string
          description: raw type of the model
          example: image-classification
        reported_type:
          title: Reported Type
          type: string
          description: reported type of the model
          example: text-generation
        description:
          title: Description
          type: string
          description: description of the model
          default: ''
          example: ResNet-50 is a convolutional neural network that is trained on more than a million images from the ImageNet database. It is a 50-layer deep neural network.
        cover_img_url:
          title: Cover Img Url
          type: string
          description: cover image link
          default: ''
        tags:
          title: Tags
          type: array
          items:
            type: string
          description: list of tags
        pricing:
          title: Pricing
          anyOf:
            - $ref: '#/components/schemas/ModelPricingTime'
            - $ref: '#/components/schemas/ModelPricingTokens'
            - $ref: '#/components/schemas/ModelPricingInputLength'
            - $ref: '#/components/schemas/ModelPricingInputTokens'
            - $ref: '#/components/schemas/ModelPricingUptime'
            - $ref: '#/components/schemas/ModelPricingInputCharacterLength'
            - $ref: '#/components/schemas/ModelPricingImageUnits'
          description: The pricing type and cost for this model
        max_tokens:
          title: Max Tokens
          type: integer
          description: 'The maximum context size of this model, if applicable'
          nullable: true
        replaced_by:
          title: Replaced By
          type: string
          nullable: true
        deprecated:
          title: Deprecated
          type: integer
          nullable: true
        quantization:
          title: Quantization
          type: string
          nullable: true
        mmlu:
          title: Mmlu
          type: number
          nullable: true
        expected:
          title: Expected
          type: string
          nullable: true
        private:
          title: Private
          type: integer
          default: 0
    ModelPricingImageUnits:
      title: ModelPricingImageUnits
      required:
        - cents_per_image_unit
        - default_width
        - default_height
        - default_iterations
      type: object
      properties:
        type:
          title: Type
          type: string
          default: image_units
        cents_per_image_unit:
          title: Cents Per Image Unit
          type: number
        default_width:
          title: Default Width
          type: integer
        default_height:
          title: Default Height
          type: integer
        default_iterations:
          title: Default Iterations
          type: integer
    ModelPricingInputCharacterLength:
      title: ModelPricingInputCharacterLength
      required:
        - cents_per_input_chars
      type: object
      properties:
        type:
          title: Type
          type: string
          default: input_character_length
        cents_per_input_chars:
          title: Cents Per Input Chars
          type: number
    ModelPricingInputLength:
      title: ModelPricingInputLength
      required:
        - cents_per_input_sec
      type: object
      properties:
        type:
          title: Type
          type: string
          default: input_length
        cents_per_input_sec:
          title: Cents Per Input Sec
          type: number
    ModelPricingInputTokens:
      title: ModelPricingInputTokens
      required:
        - cents_per_input_token
      type: object
      properties:
        type:
          title: Type
          type: string
          default: input_tokens
        cents_per_input_token:
          title: Cents Per Input Token
          type: number
    ModelPricingTime:
      title: ModelPricingTime
      required:
        - cents_per_sec
      type: object
      properties:
        type:
          title: Type
          type: string
          default: time
        cents_per_sec:
          title: Cents Per Sec
          type: number
    ModelPricingTokens:
      title: ModelPricingTokens
      required:
        - cents_per_input_token
        - cents_per_output_token
      type: object
      properties:
        type:
          title: Type
          type: string
          default: tokens
        cents_per_input_token:
          title: Cents Per Input Token
          type: number
        cents_per_output_token:
          title: Cents Per Output Token
          type: number
    ModelPricingUptime:
      title: ModelPricingUptime
      required:
        - cents_per_sec
      type: object
      properties:
        type:
          title: Type
          type: string
          default: uptime
        cents_per_sec:
          title: Cents Per Sec
          type: number
    ModelProvider:
      title: ModelProvider
      enum:
        - huggingface
        - deepinfra
        - cnt
      type: string
    ModelPublicityIn:
      title: ModelPublicityIn
      required:
        - public
      type: object
      properties:
        public:
          title: Public
          type: boolean
          description: whether to make the model public of private
    ModelVersionOut:
      title: ModelVersionOut
      required:
        - model_name
        - version
        - uploaded_at
      type: object
      properties:
        model_name:
          title: Model Name
          type: string
          description: Model Name
          example: microsoft/resnet-50
        version:
          title: Version
          type: string
          description: Version identifier
          example: 06dbf5f73be4b5eca79e137e00c4825f467cd5b172c64b6c9255dc4b5a25a03a
        uploaded_at:
          title: Uploaded At
          type: string
          description: Upload time
          example: '2023-01-19T21:52:03.626241+00:00'
    OpenAIBatch:
      title: OpenAIBatch
      required:
        - id
        - object
        - endpoint
        - input_file_id
        - completion_window
        - status
        - created_at
        - expires_at
      type: object
      properties:
        id:
          title: Id
          type: string
        object:
          title: Object
          type: string
        endpoint:
          title: Endpoint
          type: string
        errors:
          title: Errors
          type: object
          nullable: true
        input_file_id:
          title: Input File Id
          type: string
        completion_window:
          title: Completion Window
          type: string
        status:
          title: Status
          type: string
        output_file_id:
          title: Output File Id
          type: string
          nullable: true
        error_file_id:
          title: Error File Id
          type: string
          nullable: true
        created_at:
          title: Created At
          type: integer
        in_progress_at:
          title: In Progress At
          type: integer
          nullable: true
        completed_at:
          title: Completed At
          type: integer
          nullable: true
        failed_at:
          title: Failed At
          type: integer
          nullable: true
        finalizing_at:
          title: Finalizing At
          type: integer
          nullable: true
        expires_at:
          title: Expires At
          type: integer
        expired_at:
          title: Expired At
          type: integer
          nullable: true
        cancelled_at:
          title: Cancelled At
          type: integer
          nullable: true
        cancelling_at:
          title: Cancelling At
          type: integer
          nullable: true
        request_counts:
          title: Request Counts
          type: object
          nullable: true
        metadata:
          title: Metadata
          type: object
          nullable: true
    OpenAIBatchesIn:
      title: OpenAIBatchesIn
      required:
        - input_file_id
        - endpoint
        - completion_window
        - metadata
      type: object
      properties:
        input_file_id:
          title: Input File Id
          type: string
          description: The ID of an uploaded file that contains requests for the new batch.
        endpoint:
          title: Endpoint
          enum:
            - /v1/chat/completions
            - /v1/completions
          type: string
          description: 'The endpoint to be used for all requests in the batch. Currently /v1/chat/completions, /v1/completions are supported.'
        completion_window:
          title: Completion Window
          enum:
            - 24h
          type: string
          description: The time frame within which the batch should be processed. Currently only 24h is supported.
        metadata:
          title: Metadata
          type: object
          description: Optional metadata to be stored with the batch.
          nullable: true
    OpenAIChatCompletionsIn:
      title: OpenAIChatCompletionsIn
      required:
        - model
        - messages
      type: object
      properties:
        model:
          title: Model
          type: string
          description: model name
          example: meta-llama/Llama-2-70b-chat-hf
        messages:
          title: Messages
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/ChatCompletionToolMessage'
              - $ref: '#/components/schemas/ChatCompletionAssistantMessage'
              - $ref: '#/components/schemas/ChatCompletionUserMessage'
              - $ref: '#/components/schemas/ChatCompletionSystemMessage'
          description: 'conversation messages: (user,assistant,tool)*,user including one system message anywhere'
        stream:
          title: Stream
          type: boolean
          description: whether to stream the output via SSE or return the full response
          default: false
        temperature:
          title: Temperature
          maximum: 2.0
          minimum: 0.0
          type: number
          description: 'What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic'
          default: 1
        top_p:
          title: Top P
          maximum: 1.0
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: 'An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.'
          default: 1
        min_p:
          title: Min P
          maximum: 1.0
          minimum: 0.0
          type: number
          description: 'Float that represents the minimum probability for a token to be considered, relative to the probability of the most likely token. Must be in [0, 1]. Set to 0 to disable this.'
          default: 0
        top_k:
          title: Top K
          maximum: 1000.0
          exclusiveMaximum: true
          minimum: 0.0
          type: integer
          description: Sample from the best k (number of) tokens. 0 means off
          default: 0
        max_tokens:
          title: Max Tokens
          maximum: 1000000.0
          minimum: 0.0
          type: integer
          description: "The maximum number of tokens to generate in the chat completion.\n\nThe total length of input tokens and generated tokens is limited by the model's context length. If explicitly set to None it will be the model's max context length minus input length or 16384, whichever is smaller."
          nullable: true
        stop:
          title: Stop
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: up to 16 sequences where the API will stop generating further tokens
          nullable: true
        n:
          title: N
          maximum: 4.0
          minimum: 1.0
          type: integer
          description: number of sequences to return
          default: 1
        presence_penalty:
          title: Presence Penalty
          maximum: 2.0
          minimum: -2.0
          type: number
          description: 'Positive values penalize new tokens based on whether they appear in the text so far, increasing the model''s likelihood to talk about new topics.'
          default: 0
        frequency_penalty:
          title: Frequency Penalty
          maximum: 2.0
          minimum: -2.0
          type: number
          description: 'Positive values penalize new tokens based on how many times they appear in the text so far, increasing the model''s likelihood to talk about new topics.'
          default: 0
        tools:
          title: Tools
          type: array
          items:
            $ref: '#/components/schemas/ChatTools'
          description: 'A list of tools the model may call. Currently, only functions are supported as a tool.'
          nullable: true
        tool_choice:
          title: Tool Choice
          type: string
          description: Controls which (if any) function is called by the model. none means the model will not call a function and instead generates a message. auto means the model can pick between generating a message or calling a function. specifying a particular function choice is not supported currently.none is the default when no functions are present. auto is the default if functions are present.
          nullable: true
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        repetition_penalty:
          title: Repetition Penalty
          maximum: 5.0
          minimum: 0.01
          type: number
          description: 'Alternative penalty for repetition, but multiplicative instead of additive (> 1 penalize, < 1 encourage)'
          default: 1
        user:
          title: User
          type: string
          description: 'A unique identifier representing your end-user, which can help monitor and detect abuse. Avoid sending us any identifying information. We recommend hashing user identifiers.'
          nullable: true
        seed:
          title: Seed
          maximum: 18446744073709552000
          exclusiveMaximum: true
          minimum: -9223372036854776000
          type: integer
          description: 'Seed for random number generator. If not provided, a random seed is used. Determinism is not guaranteed.'
          nullable: true
        logprobs:
          title: Logprobs
          type: boolean
          description: 'Whether to return log probabilities of the output tokens or not.If true, returns the log probabilities of each output token returned in the `content` of `message`.'
          nullable: true
        stream_options:
          $ref: '#/components/schemas/StreamOptions'
        reasoning_effort:
          title: Reasoning Effort
          enum:
            - low
            - medium
            - high
            - none
          type: string
          description: 'Constrains effort on reasoning for reasoning models. Currently supported values are none, low, medium, and high. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response. Setting to none disables reasoning entirely if the model supports.'
          nullable: true
    OpenAICompletionsIn:
      title: OpenAICompletionsIn
      required:
        - model
        - prompt
      type: object
      properties:
        model:
          title: Model
          type: string
          description: model name
          example: meta-llama/Llama-2-70b-chat-hf
        prompt:
          title: Prompt
          type: string
          description: input prompt - a single string is currently supported
        max_tokens:
          title: Max Tokens
          maximum: 1000000.0
          minimum: 0.0
          exclusiveMinimum: true
          type: integer
          description: "The maximum number of tokens to generate in the completion.\n\nThe total length of input tokens and generated tokens is limited by the model's context length.If explicitly set to None it will be the model's max context length minus input length or 16384, whichever is smaller."
          nullable: true
        temperature:
          title: Temperature
          maximum: 2.0
          minimum: 0.0
          type: number
          description: 'What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic'
          default: 1
        top_p:
          title: Top P
          maximum: 1.0
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: 'An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.'
          default: 1
        min_p:
          title: Min P
          maximum: 1.0
          minimum: 0.0
          type: number
          description: 'Float that represents the minimum probability for a token to be considered, relative to the probability of the most likely token. Must be in [0, 1]. Set to 0 to disable this.'
          default: 0
        top_k:
          title: Top K
          maximum: 1000.0
          exclusiveMaximum: true
          minimum: 0.0
          type: integer
          description: Sample from the best k (number of) tokens. 0 means off
          default: 0
        n:
          title: N
          maximum: 4.0
          minimum: 1.0
          type: integer
          description: number of sequences to return
          default: 1
        stream:
          title: Stream
          type: boolean
          description: whether to stream the output via SSE or return the full response
          default: false
        logprobs:
          title: Logprobs
          type: integer
          description: return top tokens and their log-probabilities
          nullable: true
        echo:
          title: Echo
          type: boolean
          description: return prompt as part of the respons
          nullable: true
        stop:
          title: Stop
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: up to 16 sequences where the API will stop generating further tokens
          nullable: true
        presence_penalty:
          title: Presence Penalty
          maximum: 2.0
          minimum: -2.0
          type: number
          description: 'Positive values penalize new tokens based on whether they appear in the text so far, increasing the model''s likelihood to talk about new topics.'
          default: 0
        frequency_penalty:
          title: Frequency Penalty
          maximum: 2.0
          minimum: -2.0
          type: number
          description: 'Positive values penalize new tokens based on how many times they appear in the text so far, increasing the model''s likelihood to talk about new topics.'
          default: 0
        response_format:
          $ref: '#/components/schemas/ResponseFormat'
        repetition_penalty:
          title: Repetition Penalty
          maximum: 5.0
          minimum: 0.01
          type: number
          description: 'Alternative penalty for repetition, but multiplicative instead of additive (> 1 penalize, < 1 encourage)'
          default: 1
        user:
          title: User
          type: string
          description: 'A unique identifier representing your end-user, which can help  monitor and detect abuse. Avoid sending us any identifying information. We recommend hashing user identifiers.'
          nullable: true
        seed:
          title: Seed
          maximum: 18446744073709552000
          exclusiveMaximum: true
          minimum: -9223372036854776000
          type: integer
          description: 'Seed for random number generator. If not provided, a random seed is used. Determinism is not guaranteed.'
          nullable: true
        stream_options:
          $ref: '#/components/schemas/StreamOptions'
    OpenAIEmbeddingsIn:
      title: OpenAIEmbeddingsIn
      required:
        - model
        - input
      type: object
      properties:
        model:
          title: Model
          type: string
          description: model name
          example: thenlper/gte-large
        input:
          title: Input
          maxLength: 1024
          anyOf:
            - type: array
              items:
                type: string
            - type: string
          description: sequences to embed
          example:
            - I like chocolate
        encoding_format:
          title: Encoding Format
          enum:
            - float
          type: string
          description: format used when encoding
          default: float
    OpenAIImageData:
      title: OpenAIImageData
      required:
        - b64_json
      type: object
      properties:
        b64_json:
          title: B64 Json
          type: string
          description: The base64-encoded image data
        revised_prompt:
          title: Revised Prompt
          type: string
          description: The prompt used to generate this image
          nullable: true
    OpenAIImagesOut:
      title: OpenAIImagesOut
      required:
        - data
      type: object
      properties:
        created:
          title: Created
          type: integer
          description: Unix timestamp of when the images were created
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/OpenAIImageData'
          description: List of generated images
    OpenAIModelOut:
      title: OpenAIModelOut
      required:
        - id
        - created
        - owned_by
        - root
      type: object
      properties:
        id:
          title: Id
          type: string
        object:
          title: Object
          type: string
          default: model
        created:
          title: Created
          type: integer
        owned_by:
          title: Owned By
          type: string
        root:
          title: Root
          type: string
        parent:
          title: Parent
          type: 'null'
    OpenAIModelsOut:
      title: OpenAIModelsOut
      type: object
      properties:
        object:
          title: Object
          type: string
          default: list
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/OpenAIModelOut'
    OpenAITextToSpeechIn:
      title: OpenAITextToSpeechIn
      required:
        - model
        - input
      type: object
      properties:
        model:
          title: Model
          type: string
          description: model name
          example: deepinfra/tts
        input:
          title: Input
          type: string
          description: Text to convert to speech
          example: "I'm beginnin' to feel like a Rap God, Rap God\nAll my people from the front to the back nod, back nod\nNow, who thinks their arms are long enough to slap box, slap box?\nThey said I rap like a robot, so call me Rap-bot"
        voice:
          title: Voice
          type: string
          description: Preset voices to use for the speech.
          nullable: true
        response_format:
          $ref: '#/components/schemas/TtsResponseFormat'
        speed:
          title: Speed
          maximum: 4.0
          minimum: 0.25
          type: number
          description: speed of the speech
          default: 1
        extra_body:
          title: Extra Body
          type: object
          description: Extra body parameters for the model.
          nullable: true
    RateLimitOut:
      title: RateLimitOut
      required:
        - rate_limit
      type: object
      properties:
        rate_limit:
          title: Rate Limit
          type: integer
          description: Per model rate limit
    RateLimitRequestIn:
      title: RateLimitRequestIn
      required:
        - rate_limit
        - reason
      type: object
      properties:
        rate_limit:
          title: Rate Limit
          type: integer
        reason:
          title: Reason
          maxLength: 2048
          type: string
    ResponseFormat:
      title: ResponseFormat
      type: object
      properties:
        type:
          title: Type
          enum:
            - text
            - json_object
          type: string
          default: text
    ScaleSettings:
      title: ScaleSettings
      type: object
      properties:
        min_instances:
          title: Min Instances
          type: integer
          description: Minimum number of model instances to run
          default: 1
        max_instances:
          title: Max Instances
          type: integer
          description: Maximum number of model instances to run
          default: 1
    SchemaOut:
      title: SchemaOut
      required:
        - variant
        - fields_in
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/SchemaVariant'
        schema_in:
          title: Schema In
          type: object
          nullable: true
        schema_out:
          title: Schema Out
          type: object
          nullable: true
        schema_stream:
          title: Schema Stream
          type: object
          nullable: true
        fields_in:
          title: Fields In
          type: array
          items:
            $ref: '#/components/schemas/ModelFieldInfo'
    SchemaVariant:
      title: SchemaVariant
      required:
        - key
        - url
      type: object
      properties:
        key:
          $ref: '#/components/schemas/SchemaVariantKey'
        url:
          title: Url
          type: string
    SchemaVariantKey:
      title: SchemaVariantKey
      enum:
        - default
        - openai-completions
        - openai-chat-completions
        - openai-embeddings
        - openai-speech-to-text
        - openai-tts
        - openai-images
        - openai-images-variations
        - elevenlabs-tts
        - create-voice
        - read-voice
        - update-voice
        - delete-voice
        - list-voices
        - ai-sdk
      type: string
    ScopedJWTIn:
      title: ScopedJWTIn
      required:
        - api_token_name
      type: object
      properties:
        api_token_name:
          title: Api Token Name
          type: string
        models:
          title: Models
          type: array
          items:
            type: string
          description: allow inference only to the specified model names
          nullable: true
        expires_delta:
          title: Expires Delta
          type: integer
          description: how many seconds in the future should the token be valid for
          nullable: true
        expires_at:
          title: Expires At
          type: integer
          description: unix timestamp when the token should expire
          nullable: true
        spending_limit:
          title: Spending Limit
          type: number
          description: only allow spending that much USD until the token becomes invalid
          nullable: true
    ScopedJWTOut:
      title: ScopedJWTOut
      required:
        - token
      type: object
      properties:
        token:
          title: Token
          type: string
          description: The newly minted scoped JWT ready for use
    SourceModel:
      title: SourceModel
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SourceTypeEnum'
        civit_url:
          title: Civit Url
          type: string
          nullable: true
    SourceTypeEnum:
      title: SourceTypeEnum
      enum:
        - civitai
      type: string
    StreamOptions:
      title: StreamOptions
      type: object
      properties:
        include_usage:
          title: Include Usage
          type: boolean
          description: whether to include usage data
          default: true
        continuous_usage_stats:
          title: Continuous Usage Stats
          type: boolean
          description: whether to include usage stats continuously with each streaming event
          default: false
    TimeDeploymentStatsOut:
      title: TimeDeploymentStatsOut
      required:
        - requests
        - total_time_s
        - total_amount_cents
        - avg_time_ms
        - avg95_time_ms
        - errors
      type: object
      properties:
        requests:
          title: Requests
          type: integer
          description: number of inference requests in the provided interval
        total_time_s:
          title: Total Time S
          type: integer
          description: total number of seconds spend in inference
        total_amount_cents:
          title: Total Amount Cents
          type: integer
          description: total number of cents spent
        avg_time_ms:
          title: Avg Time Ms
          type: number
          description: average millisecond inference time
        avg95_time_ms:
          title: Avg95 Time Ms
          type: number
          description: 95th percentile inference time (estimated)
        errors:
          title: Errors
          type: integer
          description: number of errors
    TtsResponseFormat:
      title: TtsResponseFormat
      enum:
        - mp3
        - opus
        - flac
        - wav
        - pcm
      type: string
      description: 'Select the desired format for the speech output. Supported formats include mp3, opus, flac, wav, and pcm.'
      example: mp3
    UpdateLoraApiRequest:
      title: UpdateLoraApiRequest
      type: object
      properties:
        private:
          title: Private
          type: boolean
          nullable: true
        description:
          title: Description
          type: string
          nullable: true
    Voice:
      title: Voice
      required:
        - user_id
        - voice_id
        - name
      type: object
      properties:
        user_id:
          title: User Id
          type: string
        voice_id:
          title: Voice Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
          default: ''
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
    Bearer:
      type: http
      scheme: bearer
security:
  - Bearer: [ ]